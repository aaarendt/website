Traceback (most recent call last):
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/client.py", line 1107, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/srv/conda/envs/notebook/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/client.py", line 852, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
p = Profile.load('/tmp/microstructure/SMP/SNEX20_SMP_S19M1174_2N13_20200206.PNT',)
plt.plot(p.samples.distance, p.samples.force)
# Prettify our plot a bit
plt.title(p.name)
plt.ylabel('Force [N]')
plt.xlabel('Depth [mm]')
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
[0;32m<ipython-input-9-65151fbd1860>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mp[0m [0;34m=[0m [0mProfile[0m[0;34m.[0m[0mload[0m[0;34m([0m[0;34m'/tmp/microstructure/SMP/SNEX20_SMP_S19M1174_2N13_20200206.PNT'[0m[0;34m,[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mp[0m[0;34m.[0m[0msamples[0m[0;34m.[0m[0mdistance[0m[0;34m,[0m [0mp[0m[0;34m.[0m[0msamples[0m[0;34m.[0m[0mforce[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0;31m# Prettify our plot a bit[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0mplt[0m[0;34m.[0m[0mtitle[0m[0;34m([0m[0mp[0m[0;34m.[0m[0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0mplt[0m[0;34m.[0m[0mylabel[0m[0;34m([0m[0;34m'Force [N]'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/snowmicropyn/profile.py[0m in [0;36mload[0;34m(pnt_file, name)[0m
[1;32m    395[0m         [0;34m.[0m[0;34m.[0m [0m_path[0m[0;34m-[0m[0mlike[0m [0mobject[0m[0;34m:[0m [0mhttps[0m[0;34m:[0m[0;34m//[0m[0mdocs[0m[0;34m.[0m[0mpython[0m[0;34m.[0m[0morg[0m[0;34m/[0m[0;36m3[0m[0;34m/[0m[0mglossary[0m[0;34m.[0m[0mhtml[0m[0;31m#term-path-like-object[0m[0;34m[0m[0;34m[0m[0m
[1;32m    396[0m         """
[0;32m--> 397[0;31m         [0;32mreturn[0m [0mProfile[0m[0;34m([0m[0mpnt_file[0m[0;34m,[0m [0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    398[0m [0;34m[0m[0m
[1;32m    399[0m     [0;32mdef[0m [0msave[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/snowmicropyn/profile.py[0m in [0;36m__init__[0;34m(self, pnt_file, name)[0m
[1;32m     76[0m         [0mself[0m[0;34m.[0m[0m_pnt_file[0m [0;34m=[0m [0mpathlib[0m[0;34m.[0m[0mPath[0m[0;34m([0m[0mpnt_file[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     77[0m         [0;31m# Load pnt file, returns header (dict) and raw samples[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 78[0;31m         [0mself[0m[0;34m.[0m[0m_pnt_header[0m[0;34m,[0m [0mpnt_samples[0m [0;34m=[0m [0mPnt[0m[0;34m.[0m[0mload[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_pnt_file[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     79[0m [0;34m[0m[0m
[1;32m     80[0m         [0;31m# Get clean WGS84 coordinates (use +/- instead of N/E)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/snowmicropyn/pnt.py[0m in [0;36mload[0;34m(file)[0m
[1;32m    218[0m         [0mfile[0m [0;34m=[0m [0mpathlib[0m[0;34m.[0m[0mPath[0m[0;34m([0m[0mfile[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    219[0m         [0mlog[0m[0;34m.[0m[0minfo[0m[0;34m([0m[0;34m'Reading pnt file {}'[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0mfile[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 220[0;31m         [0;32mwith[0m [0mfile[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0;34m'rb'[0m[0;34m)[0m [0;32mas[0m [0mf[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    221[0m             [0mraw[0m [0;34m=[0m [0mf[0m[0;34m.[0m[0mread[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    222[0m [0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/pathlib.py[0m in [0;36mopen[0;34m(self, mode, buffering, encoding, errors, newline)[0m
[1;32m   1219[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0m_closed[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1220[0m             [0mself[0m[0;34m.[0m[0m_raise_closed[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1221[0;31m         return io.open(self, mode, buffering, encoding, errors, newline,
[0m[1;32m   1222[0m                        opener=self._opener)
[1;32m   1223[0m [0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/pathlib.py[0m in [0;36m_opener[0;34m(self, name, flags, mode)[0m
[1;32m   1075[0m     [0;32mdef[0m [0m_opener[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m,[0m [0mflags[0m[0;34m,[0m [0mmode[0m[0;34m=[0m[0;36m0o666[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1076[0m         [0;31m# A stub for the opener argument to built-in open()[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1077[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_accessor[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mflags[0m[0;34m,[0m [0mmode[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1078[0m [0;34m[0m[0m
[1;32m   1079[0m     [0;32mdef[0m [0m_raw_open[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mflags[0m[0;34m,[0m [0mmode[0m[0;34m=[0m[0;36m0o777[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '/tmp/microstructure/SMP/SNEX20_SMP_S19M1174_2N13_20200206.PNT'
FileNotFoundError: [Errno 2] No such file or directory: '/tmp/microstructure/SMP/SNEX20_SMP_S19M1174_2N13_20200206.PNT'

